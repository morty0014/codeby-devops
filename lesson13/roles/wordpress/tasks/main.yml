- name: Download WordPress
  ansible.builtin.get_url:
    url: "https://wordpress.org/wordpress-{{ wp_version }}.tar.gz"
    dest: "/srv/wordpress-{{ wp_version }}.tar.gz"

- name: Extract archive
  ansible.builtin.command:
    chdir: /srv/
    cmd: "/bin/tar xvf wordpress-{{ wp_version }}.tar.gz"
    creates: /srv/wordpress

- name: Add group "wordpress"
  ansible.builtin.group:
    name: wordpress

- name: Add user "wordpress"
  ansible.builtin.user:
    name: wordpress
    group: wordpress 
    home: /srv/wordpress/

- name: Fetch random salts for WordPress config
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  become: no

- name: Create WordPress database
  ansible.builtin.mysql_db: 
    name: "{{ wp_db_name }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

#    login_unix_socket: /var/lib/mysql/mysql.sock
#    login_unix_socket: /run/mysqld/mysqld.sock

- name: Create WordPress database user
  ansible.builtin.mysql_user:
    name: "{{ wp_db_user }}"
    password: "{{ wp_db_password }}"
    priv: "{{ wp_db_name }}.*:ALL" 
    host: 'localhost'
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: present

- name: Copy WordPress config file
  ansible.builtin.template:
    src: wp-config.php
    dest: /srv/wordpress/

- name: Change ownership of WordPress installation
  ansible.builtin.file:
    path: /srv/wordpress/
    owner: wordpress
    group: wordpress
    state: directory
    recurse: yes

- name: import centos wordpress tasks
  import_tasks: centos.yml
  when: ansible_facts['os_family']|lower == 'centos'

- name: import ubuntu wordpress tasks
  import_tasks: ubuntu.yml
  when: ansible_facts['os_family']|lower == 'ubuntu'
